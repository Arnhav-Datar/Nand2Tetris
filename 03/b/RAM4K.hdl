// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load, sel=address[9..11], a=l0, b=l1, c=l2, d=l3, e=l4, f=l5,g=l6, h=l7 );

    RAM512(in=in, load=l0, address=address[0..8], out=w1);    
    RAM512(in=in, load=l1, address=address[0..8], out=w2);    
    RAM512(in=in, load=l2, address=address[0..8], out=w3);    
    RAM512(in=in, load=l3, address=address[0..8], out=w4);    
    RAM512(in=in, load=l4, address=address[0..8], out=w5);    
    RAM512(in=in, load=l5, address=address[0..8], out=w6);    
    RAM512(in=in, load=l6, address=address[0..8], out=w7);    
    RAM512(in=in, load=l7, address=address[0..8], out=w8);    

    Mux8Way16(a=w1, b=w2, c=w3, d=w4, e=w5, f=w6, g=w7, h=w8, sel=address[9..11], out=out); 
}
