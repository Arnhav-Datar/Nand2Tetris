function LinkedList.new 0
push constant 3
call Memory.alloc 1
pop pointer 0
push constant 0
pop this 0
push constant 0
pop this 2
push pointer 0
return
function LinkedList.addFirst 1
push argument 0
pop pointer 0
push argument 1
call ListNode.new 1
pop local 0
push this 2
push constant 0
eq
not
if-goto LinkedList2
push local 0
pop this 1
goto LinkedList3
label LinkedList2
push local 0
push this 0
call ListNode.setNext 2
pop temp 0
label LinkedList3
push local 0
pop this 0
push this 2
push constant 1
add
pop this 2
push constant 0
return
function LinkedList.addLast 1
push argument 0
pop pointer 0
push argument 1
call ListNode.new 1
pop local 0
push this 2
push constant 0
eq
not
if-goto LinkedList4
push local 0
pop this 0
goto LinkedList5
label LinkedList4
push this 1
push local 0
call ListNode.setNext 2
pop temp 0
label LinkedList5
push local 0
pop this 1
push this 2
push constant 1
add
pop this 2
push constant 0
return
function LinkedList.removeFirst 2
push argument 0
pop pointer 0
push this 0
push constant 0
eq
not
if-goto LinkedList6
push constant 1
neg
pop local 1
goto LinkedList7
label LinkedList6
push this 0
call ListNode.getValue 1
pop local 1
push this 0
pop local 0
push this 0
call ListNode.getNext 1
pop this 0
push local 0
call ListNode.dispose 1
pop temp 0
push this 2
push constant 1
sub
pop this 2
push this 2
push constant 0
eq
not
if-goto LinkedList8
push constant 0
pop this 1
goto LinkedList9
label LinkedList8
label LinkedList9
label LinkedList7
push local 1
return
function LinkedList.removeLast 2
push argument 0
pop pointer 0
push this 1
push constant 0
eq
not
if-goto LinkedList10
push constant 1
neg
pop local 1
goto LinkedList11
label LinkedList10
push this 1
call ListNode.getValue 1
pop local 1
push this 1
pop local 0
push this 1
call ListNode.getPrevious 1
pop this 1
push local 0
call ListNode.dispose 1
pop temp 0
push this 2
push constant 1
sub
pop this 2
push this 2
push constant 0
eq
not
if-goto LinkedList12
push constant 0
pop this 0
goto LinkedList13
label LinkedList12
label LinkedList13
label LinkedList11
push local 1
return
function LinkedList.getSize 0
push argument 0
pop pointer 0
push this 2
return
function LinkedList.dispose 2
push argument 0
pop pointer 0
push this 0
pop local 0
push local 0
push constant 0
eq
not
not
if-goto LinkedList14
push local 0
pop local 1
push local 0
call ListNode.getNext 1
pop local 0
push local 1
call ListNode.dispose 1
pop temp 0
goto LinkedList15
label LinkedList14
label LinkedList15
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
