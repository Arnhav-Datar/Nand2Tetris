function Ball.new 0
push constant 15
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push argument 2
pop this 10
push argument 3
push constant 6
sub
pop this 11
push argument 4
pop this 12
push argument 5
push constant 6
sub
pop this 13
push constant 0
pop this 14
push pointer 0
call Ball.show 1
pop temp 0
push pointer 0
return
function Ball.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Ball.show 0
push argument 0
pop pointer 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push pointer 0
call Ball.draw 1
pop temp 0
push constant 0
return
function Ball.hide 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push pointer 0
call Ball.draw 1
pop temp 0
push constant 0
return
function Ball.draw 0
push argument 0
pop pointer 0
push this 0
push this 1
push this 0
push constant 5
add
push this 1
push constant 5
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function Ball.getLeft 0
push argument 0
pop pointer 0
push this 0
return
function Ball.getRight 0
push argument 0
pop pointer 0
push this 0
push constant 5
add
return
function Ball.setDestination 3
push argument 0
pop pointer 0
push argument 1
push this 0
sub
pop this 2
push argument 2
push this 1
sub
pop this 3
push this 2
call Math.abs 1
pop local 0
push this 3
call Math.abs 1
pop local 1
push local 0
push local 1
lt
pop this 7
push this 7
not
if-goto Ball2
push local 0
pop local 2
push local 1
pop local 0
push local 2
pop local 1
push this 1
push argument 2
lt
pop this 8
push this 0
push argument 1
lt
pop this 9
goto Ball3
label Ball2
push this 0
push argument 1
lt
pop this 8
push this 1
push argument 2
lt
pop this 9
label Ball3
push constant 2
push local 1
call Math.multiply 2
push local 0
sub
pop this 4
push constant 2
push local 1
call Math.multiply 2
pop this 5
push constant 2
push local 1
push local 0
sub
call Math.multiply 2
pop this 6
push constant 0
return
function Ball.move 0
push argument 0
pop pointer 0
push pointer 0
call Ball.hide 1
pop temp 0
push this 4
push constant 0
lt
not
if-goto Ball4
push this 4
push this 5
add
pop this 4
goto Ball5
label Ball4
push this 4
push this 6
add
pop this 4
push this 9
not
if-goto Ball6
push this 7
not
if-goto Ball8
push this 0
push constant 4
add
pop this 0
goto Ball9
label Ball8
push this 1
push constant 4
add
pop this 1
label Ball9
goto Ball7
label Ball6
push this 7
not
if-goto Ball10
push this 0
push constant 4
sub
pop this 0
goto Ball11
label Ball10
push this 1
push constant 4
sub
pop this 1
label Ball11
label Ball7
label Ball5
push this 8
not
if-goto Ball12
push this 7
not
if-goto Ball14
push this 1
push constant 4
add
pop this 1
goto Ball15
label Ball14
push this 0
push constant 4
add
pop this 0
label Ball15
goto Ball13
label Ball12
push this 7
not
if-goto Ball16
push this 1
push constant 4
sub
pop this 1
goto Ball17
label Ball16
push this 0
push constant 4
sub
pop this 0
label Ball17
label Ball13
push this 0
push this 10
gt
not
not
if-goto Ball18
push constant 1
pop this 14
push this 10
pop this 0
goto Ball19
label Ball18
label Ball19
push this 0
push this 11
lt
not
not
if-goto Ball20
push constant 2
pop this 14
push this 11
pop this 0
goto Ball21
label Ball20
label Ball21
push this 1
push this 12
gt
not
not
if-goto Ball22
push constant 3
pop this 14
push this 12
pop this 1
goto Ball23
label Ball22
label Ball23
push this 1
push this 13
lt
not
not
if-goto Ball24
push constant 4
pop this 14
push this 13
pop this 1
goto Ball25
label Ball24
label Ball25
push pointer 0
call Ball.show 1
pop temp 0
push this 14
return
function Ball.bounce 5
push argument 0
pop pointer 0
push this 2
push constant 10
call Math.divide 2
pop local 2
push this 3
push constant 10
call Math.divide 2
pop local 3
push argument 1
push constant 0
eq
not
if-goto Ball26
push constant 10
pop local 4
goto Ball27
label Ball26
push this 2
push constant 0
lt
not
push argument 1
push constant 1
eq
and
push this 2
push constant 0
lt
push argument 1
push constant 1
neg
eq
and
or
not
if-goto Ball28
push constant 20
pop local 4
goto Ball29
label Ball28
push constant 5
pop local 4
label Ball29
label Ball27
push this 14
push constant 1
eq
not
if-goto Ball30
push constant 506
pop local 0
push local 3
push constant 50
neg
call Math.multiply 2
push local 2
call Math.divide 2
pop local 1
push this 1
push local 1
push local 4
call Math.multiply 2
add
pop local 1
goto Ball31
label Ball30
push this 14
push constant 2
eq
not
if-goto Ball32
push constant 0
pop local 0
push local 3
push constant 50
call Math.multiply 2
push local 2
call Math.divide 2
pop local 1
push this 1
push local 1
push local 4
call Math.multiply 2
add
pop local 1
goto Ball33
label Ball32
push this 14
push constant 3
eq
not
if-goto Ball34
push constant 250
pop local 1
push local 2
push constant 25
neg
call Math.multiply 2
push local 3
call Math.divide 2
pop local 0
push this 0
push local 0
push local 4
call Math.multiply 2
add
pop local 0
goto Ball35
label Ball34
push constant 0
pop local 1
push local 2
push constant 25
call Math.multiply 2
push local 3
call Math.divide 2
pop local 0
push this 0
push local 0
push local 4
call Math.multiply 2
add
pop local 0
label Ball35
label Ball33
label Ball31
push pointer 0
push local 0
push local 1
call Ball.setDestination 3
pop temp 0
push constant 0
return
